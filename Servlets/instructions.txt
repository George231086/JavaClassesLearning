Instructions:

Using command line:

Once Tomcat has been downloaded, the JAVA_HOME and CATALINA_HOME environment variables need to be set. If using the BASH
shell this can be done by appending to the .bashrc file the following 

export JAVA_HOME=path/to/jdk # eg /user/Downloads/jdk1.8.0_45
export CATALINA_HOME=path/to/tomcat # eg /user/Downloads/apache-tomcat-7.0.62

The standard edition jdk does not include the servlet api, however Tomcat includes the relevant jar. Add

export CLASSPATH=$CATALINA_HOME/lib/servlet-api.jar:$CLASSPATH

to the .bashrc file to add it the classpath. This will allow javac to find the needed class definitions. 

To use the servlets you'll need to have mysql installed. Also you'll need to download and place a copy of
mysql-connector-java-5.1.23-bin.jar in $CATALINA_HOME/lib. Finally you'll have to create the necessary database and table. 
I used the following 
database: training
user: george
password: georgepswd
table: users
with columns given as a
name, email, password

For each servlet make an entry in the web.xml file of the form
<servlet>
   <servlet-name>Servlet name</servlet-name>
   <servlet-class>class name of servlet</servlet-class>
</servlet>

<servlet-mapping>
   <servlet-name>Servlet name</servlet-name>
   <url-pattern>URL where servlet will be found</url-pattern>
</servlet-mapping>

Start tomcat and navigate to one of html forms or servlet urls to test them out.    

The above instructions are sufficient for test small apps. In reality it is far easier to use an IDE.

Eclipse IDE: 

Using eclipse is pretty straight forward to set up. Only need to ensure you have the eclipse enterprise edition so that
you can create a dynamic web project. Then will need to add the relevant jars to the build path. 
